targets:
  - name: uses_bin_tool
    dependencies:
      - :creates_bin_tool
      - :declares_bin_tool
    command: |
      # Using the bin tool
      $(bin :creates_bin_tool) foo
      $(bin :declares_bin_tool) bar

  # A target can only produce a single binary
  # You can run that binary by running:
  # grog run //package:a_bin_tool -- arg1 arg2
  - name: creates_bin_tool
    command: |
      mkdir -p dist

      cat > dist/bin << 'EOF'
      #!/bin/bash
      if [[ "$1" != "foo" ]]; then
        echo "expected 'foo'"
        exit 1
      fi
      EOF
    bin_output: dist/bin
    output_checks:
      - command: "echo 'Hello World'"
        expected: "Hello World"

  # It is also possible to just declare an existing file
  # as a bin output and use that
  - name: declares_bin_tool
    inputs:
      - bin_tool.sh
    bin_output: bin_tool.sh
    tags:
      - "no-cache"
    output_checks:
      - command: "which sh"
